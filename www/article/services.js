// Generated by CoffeeScript 1.10.0
(function() {
  module.exports = angular.module('article.services', []).factory('GetArticles', function(Resource) {
    return function(thread, type, day, week) {
      if (thread == null) {
        thread = false;
      }
      if (type == null) {
        type = false;
      }
      if (day == null) {
        day = false;
      }
      if (week == null) {
        week = false;
      }
      return Resource.query({
        method: 'get_item',
        thread: thread,
        type: type,
        day: day,
        week: week
      }).$promise;
    };
  }).factory('CreateArticle', function(Resource) {
    var execute;
    execute = function(content) {
      var date_and_time, item, item_id, promise;
      date_and_time = Date.parse(new Date()) / 1000;
      item = {
        content: content,
        date_and_time: date_and_time,
        item_id: date_and_time.toString(),
        remind_time: '0',
        remind_text: '',
        type: '0',
        type2: '0',
        thread_id: '0'
      };
      item_id = item.item_id;
      content = item.content;
      date_and_time = item.date_and_time;
      promise = Resource.query({
        method: 'item_create',
        content: content,
        item_id: item_id,
        date_and_time: date_and_time
      }).$promise;
      return promise.then(function(res) {
        return console.log('CreateArticle成功');
      }, function(res) {
        return console.log('CreateArticle失败');
      });
    };
    return execute;
  }).factory('DeleteArticle', function(Resource) {
    var execute;
    execute = function(item_id) {
      var promise;
      item_id = item_id.toString();
      promise = Resource.query({
        method: 'item_delete',
        item_id: item_id
      }).$promise;
      return promise.then(function(res) {
        return console.log('CreateArticle成功');
      }, function(res) {
        return console.log('CreateArticle失败');
      });
    };
    return execute;
  }).factory('SaveArticle', function(Resource) {
    var execute;
    execute = function(content, item_id) {
      var promise;
      item_id = item_id.toString();
      promise = Resource.query({
        method: 'item_saveContent',
        content: content,
        item_id: item_id
      }).$promise;
      return promise.then(function(res) {
        return console.log('SaveArticle成功');
      }, function(res) {
        return console.log('SaveArticle失败');
      });
    };
    return execute;
  }).factory('SetRelation', function(Resource) {
    var execute;
    execute = function(item_id, thread_id) {
      var promise;
      item_id = item_id.toString();
      thread_id = thread_id.toString();
      promise = Resource.query({
        method: 'item_to_thread',
        thread_id: thread_id,
        item_id: item_id
      }).$promise;
      return promise.then(function(res) {
        return console.log('SetRelation成功');
      }, function(res) {
        return console.log('SetRelation失败');
      });
    };
    return execute;
  }).factory('SetType', function(Resource) {
    var execute;
    execute = function(item_id, type) {
      var promise;
      item_id = item_id.toString();
      promise = Resource.query({
        method: 'change_type',
        item_id: item_id,
        type: type
      }).$promise;
      return promise.then(function(res) {
        return console.log('SetRelation成功');
      }, function(res) {
        return console.log('SetRelation失败');
      });
    };
    return execute;
  }).factory('Reclock', function(Resource) {
    var execute;
    execute = function(item_obj) {
      var item_id, promise, seconds;
      item_id = item_obj.item_id.toString();
      seconds = item_obj.remind_time - item_obj.date_and_time;
      item_obj.date_and_time = Date.parse(new Date()) / 1000;
      item_obj.remind_time = item_obj.date_and_time + seconds;
      promise = Resource.query({
        method: 'refresh_timer',
        item_id: item_id
      }).$promise;
      return promise.then(function(res) {
        return console.log('Reclock成功');
      }, function(res) {
        return console.log('Reclock失败');
      });
    };
    return execute;
  }).factory('SetClock', function(Resource) {
    var execute;
    execute = function(item_obj, seconds) {
      var item_id, promise, words;
      item_id = item_obj.item_id;
      item_obj.remind_time = (item_obj.date_and_time - 0) + (seconds - 0);
      words = item_obj.remind_text;
      promise = Resource.query({
        method: 'set_timer',
        item_id: item_id,
        seconds: seconds,
        words: words
      }).$promise;
      return promise.then(function(res) {
        return console.log('SetClock成功');
      }, function(res) {
        return console.log('SetClock失败');
      });
    };
    return execute;
  });

}).call(this);
